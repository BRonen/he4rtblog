---
import Layout from "../../layouts/Layout.astro";
import ArticleInfo from "../../components/ArticleInfo.astro";
import { CollectionEntry, getCollection } from "astro:content";
import ArticleImage from "../../components/ArticleImage.astro";

export async function getStaticPaths() {
    const articleEntries = await getCollection("article");

    return articleEntries.map((entry) => ({
        params: { slug: entry.slug },
        props: { entry },
    }));
}

const entry = Astro.props.entry as CollectionEntry<"article">;
const { Content } = await entry.render();
---

<Layout title={entry.data.title}>
    <img
        slot="article-image"
        class="article-image"
        src={entry.data.image?.filePath}
        alt={entry.data.image?.alt}
    />

    <main class="container">
        <article>
            <h1 class="title">{entry.data.title}</h1>
            <Content components={{img: ArticleImage}}/>
        </article>
        
        <aside>
            <div class="info-wrapper">
                <ArticleInfo
                    author={entry.data.author}
                    date={entry.data.publishedAt}
                    tags={entry.data.tags}
                />
            </div>
        </aside>
    </main>
</Layout>

<style>
    .article-image {
        display: block;

        aspect-ratio: 2.4/1;
        width: 100%;
        min-height: 250px;
        max-height: 600px;

        object-fit: cover;
        -webkit-user-drag: none;
        user-drag: none;

        background-color: var(--c-background);
    }

    .container {
        display: flex;
        flex-wrap: wrap;
        align-items: stretch;
        width: 100%;

		margin-top: 40px;

        gap: 40px;
    }
    
    article {
        display: flex;
        flex-direction: column;
        
        flex: 1 1 650px;
        gap: 20px;

        margin-inline: auto;
    }
    
    aside {
        flex: 1 1 220px;
    }
    
    .info-wrapper {
        position: sticky;
        top: 20px;
    }
    
    article :global(*) {
        overflow-wrap: anywhere;
    }
    
    article .title {
        font-size: clamp(1.75rem, 5vw, 2rem);
    }

    article :global(p, ul, ol, table) {
        font-size: clamp(1.1rem, 2vw, 1.2rem);
        line-height: 170%;
    }

    article :global(ul, ol) {
        margin-left: 40px;
    }

    article :global(b, strong) {
        font-weight: 700;
    }

    article :global(a) {
        text-decoration: none;
        font-weight: 700;
        color: var(--c-primary);
    }

    article :global(a:hover) {
        text-decoration: underline;
    }
    
    article :global(.astro-code) {
        border-radius: 10px;
        width: 90%;
        
        margin: auto;
        padding: 20px;

        font-size: 1.1rem;
        
        box-sizing: border-box;
        filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25));
    }

    article :global(table) {
        width: 90%;
        margin: auto;
    }
</style>